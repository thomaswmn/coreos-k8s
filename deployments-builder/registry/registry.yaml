apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: docker-registry
  name: docker-registry
  namespace: docker-registry

---

apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: docker-registry
  name: docker-registry-certs
  namespace: docker-registry
type: Opaque
data:
  key: |
    {{REGISTRY_TLS_KEY}}
  crt: |
    {{REGISTRY_TLS_CERT}}

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: docker-registry
  name: docker-registry
  namespace: docker-registry
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["docker-registry-certs"]
    verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: docker-registry
  name: docker-registry
  namespace: docker-registry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: docker-registry
subjects:
  - kind: ServiceAccount
    name: docker-registry
    namespace: docker-registry

---

apiVersion: v1
kind: Pod
metadata:
  name: registry
  namespace: docker-registry
spec:
  hostNetwork: true
  containers:
  - name: registry
    image: registry.local:5000/registry:latest
    imagePullPolicy: Never
    ports:
    - containerPort: 5000
      hostPort: 5000
      name: http
    volumeMounts:
    - name: docker-registry-certs
      mountPath: /certs
    env:
    - name: REGISTRY_HTTP_TLS_CERTIFICATE
      value: /certs/crt 
    - name: REGISTRY_HTTP_TLS_KEY
      value: /certs/key
  volumes:
    - name: docker-registry-certs
      secret:
        secretName: docker-registry-certs
  serviceAccountName: docker-registry
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
